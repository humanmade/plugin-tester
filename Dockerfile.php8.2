FROM public.ecr.aws/docker/library/alpine:3.19

ARG WP_VERSION=6.6

RUN apk add -u --no-cache \
	composer \
	git \
	imagemagick \
	mysql \
	mysql-client \
	php82 \
	php82-curl \
	php82-dom \
	php82-exif \
	php82-mysqli \
	php82-pecl-imagick \
	php82-simplexml \
	php82-tokenizer \
	php82-xml \
	php82-xmlwriter

RUN apk add --no-cache php82-pear php82-dev gcc musl-dev make \
	&& pecl82 install pcov && echo extension=pcov.so > /etc/php82/conf.d/pcov.ini \
	&& apk del php82-pear php82-dev gcc musl-dev make

# Create php symlink to php82
RUN ln -sf /usr/bin/php82 /usr/bin/php

RUN wget -nv -O /tmp/wordpress.tar.gz https://codeload.github.com/WordPress/WordPress/tar.gz/refs/tags/${WP_VERSION} \
	&& mkdir /wordpress \
	&& tar --strip-components=1 -zxmf /tmp/wordpress.tar.gz -C /wordpress \
	&& rm /tmp/wordpress.tar.gz

RUN wget -nv -O /tmp/wp-phpunit.tar.gz https://github.com/wp-phpunit/wp-phpunit/archive/${WP_VERSION}.0.tar.gz \
	&& mkdir /wp-phpunit \
	&& tar --strip-components=1 -zxmf /tmp/wp-phpunit.tar.gz -C /wp-phpunit \
	&& rm /tmp/wp-phpunit.tar.gz

RUN mysql_install_db --user=mysql --ldata=/var/lib/mysql
RUN sh -c 'mysqld_safe --datadir=/var/lib/mysql &' && sleep 4 && mysql -u root -e "CREATE DATABASE wordpress"

ENV WP_DEVELOP_DIR=/wp-phpunit
ENV WP_PHPUNIT__TESTS_CONFIG=/wp-tests-config.php

VOLUME ["/code"]
WORKDIR /code
COPY ./docker-entrypoint.sh /entrypoint.sh
COPY ./wp-tests-config.php /wp-tests-config.php
RUN chmod 755 /entrypoint.sh
ENTRYPOINT ["/entrypoint.sh"]